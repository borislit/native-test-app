{"version":3,"sources":["things.js"],"names":["App","e","setState","value","event","target","props","onSubmit","state","split","newThings","things","handleChange","color","handleClick","styleId","styleData","layout","width","height","styleParams","backgroundColor","_","get","toCssString","React","Component","displayName","component"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AACA;AACA;;IAEMA,G;;;;;;;;;;;qCAEWC,C,EAAG;AACZ,iBAAKC,QAAL,CAAc,EAACC,OAAOC,MAAMC,MAAN,CAAaF,KAArB,EAAd;AACH;;;sCAEa;AACV,iBAAKG,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAAKC,KAAL,CAAWL,KAAX,CAAiBM,KAAjB,CAAuB,GAAvB,CAA1B;AACH;;;iCAGQ;AAAA;;AAAA,yBACuB,KAAKH,KAD5B;AAAA,gBACEI,SADF,UACEA,SADF;AAAA,gBACaC,MADb,UACaA,MADb;;AAEL,mBACI;AAAA;AAAA,kBAAK,WAAU,MAAf;AACI,yDAAO,MAAK,MAAZ,EAAmB,aAAY,kBAA/B,EAAkD,UAAU,kBAACV,CAAD;AAAA,+BAAO,OAAKW,YAAL,CAAkBX,CAAlB,CAAP;AAAA,qBAA5D,GADJ;AAEI;AAAA;AAAA,sBAAQ,OAAO,EAACY,OAAO,MAAR,EAAf,EAAgC,SAAS;AAAA,mCAAM,OAAKC,WAAL,EAAN;AAAA,yBAAzC;AAAA;AAAA,iBAFJ;AAGI;AAAA;AAAA;AAAA;AAA8BH,0BAA9B;AAAA;AAAA,iBAHJ;AAII;AAAA;AAAA;AAAA;AAA4BD,6BAA5B;AAAA;AAAA;AAJJ,aADJ;AASH;;;kCAIwC;AAAA,gBAA7BK,OAA6B,QAA7BA,OAA6B;AAAA,gBAApBC,SAAoB,QAApBA,SAAoB;AAAA,gBAATC,MAAS,QAATA,MAAS;AAAA,gBAC9BC,KAD8B,GACbD,MADa,CAC9BC,KAD8B;AAAA,gBACvBC,MADuB,GACbF,MADa,CACvBE,MADuB;;AAErC,gBAAMC,cAAcJ,UAAUI,WAA9B;AACA,gBAAMC,kBAAkBC,EAAEC,GAAF,CAAMH,WAAN,EAAmB,+BAAnB,CAAxB;AACA,gBAAMP,QAAQS,EAAEC,GAAF,CAAMH,WAAN,EAAmB,0BAAnB,CAAd;AACA,mBAAOI,YAAY,EAACT,gBAAD,EAAUM,gCAAV,EAA2BR,YAA3B,EAAkCK,YAAlC,EAAyCC,cAAzC,EAAZ,CAAP;AACH;;;;EAhCaM,gBAAMC,S;;AAAlB1B,G,CAwBK2B,W,GAAc,K;;;AAWzB,IAAMH,cAAc,SAAdA,WAAc;AAAA,QAAET,OAAF,SAAEA,OAAF;AAAA,QAAWM,eAAX,SAAWA,eAAX;AAAA,QAA4BR,KAA5B,SAA4BA,KAA5B;AAAA,QAAmCK,KAAnC,SAAmCA,KAAnC;AAAA,QAA0CC,MAA1C,SAA0CA,MAA1C;AAAA,iDAEME,eAFN,+BAGCR,KAHD;AAAA,CAApB;;kBASe;AACXe,eAAW5B;;AAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/De,C","file":"things.js","sourcesContent":["import React from 'react';\n// import 'regenerator-runtime/runtime';\n// import santaTypesDefinitions from 'santa-components/src/definitions/santaTypesDefinitions';\n\nclass App extends React.Component {\n\n    handleChange(e) {\n        this.setState({value: event.target.value});\n    }\n\n    handleClick() {\n        this.props.onSubmit(1, 2, this.state.value.split(\" \"));\n    }\n\n\n    render() {\n        const {newThings, things} = this.props;\n        return (\n            <div className='root'>\n                <input type=\"text\" placeholder='Enter new things' onChange={(e) => this.handleChange(e)}/>\n                <button style={{color: 'gray'}} onClick={() => this.handleClick()}>UPDATE</button>\n                <div>Things from controller: {things} </div>\n                <div>Things from Wix Code: {newThings} </div>\n            </div>\n\n        );\n    }\n\n    static displayName = \"App\";\n\n    static css({styleId, styleData, layout}) {\n        const {width, height} = layout;\n        const styleParams = styleData.styleParams;\n        const backgroundColor = _.get(styleParams, 'colors._backgroundColor.value');\n        const color = _.get(styleParams, 'colors._titleColor.value');\n        return toCssString({styleId, backgroundColor, color, width, height});\n    }\n}\n\nconst toCssString = ({styleId, backgroundColor, color, width, height}) =>\n    `.root {\n            background: ${backgroundColor}; \n            color: ${color};\n            font-size: 20px;\n            width: 100%; \n            height: 100%;\n        } `;\n\nexport default {\n    component: App\n}\n\n\n// export const NativePropsBuilder = (WrappedComponent) => {\n//     return class extends React.Component {\n//         constructor(props) {\n//             super(props);\n//             this.props.appLoadBI && this.props.appLoadBI.startLoading();\n//         }\n//\n//         static propTypes = {\n//             style: santaTypesDefinitions.NativeComponentSantaTypes.widgetStyle,\n//             resizeComponent: santaTypesDefinitions.NativeComponentSantaTypes.resizeComponent,\n//             dimensions: santaTypesDefinitions.Component.style,\n//             compActions: santaTypesDefinitions.Component.compActions,\n//             compData: santaTypesDefinitions.Component.compData,\n//             handleAction: santaTypesDefinitions.Behaviors.handleAction,\n//             formFactor: santaTypesDefinitions.NativeComponentSantaTypes.deviceType,\n//             viewMode: santaTypesDefinitions.NativeComponentSantaTypes.viewMode,\n//             defaultContentArea: santaTypesDefinitions.Container.defaultContentArea,\n//             appLoadBI: santaTypesDefinitions.NativeComponentSantaTypes.appLoadBI\n//         };\n//\n//         componentDidMount() {\n//             this.props.appLoadBI && this.props.appLoadBI.loaded();\n//         }\n//\n//         getEventHandlers() {\n//             return _.mapValues(this.props.compActions, eventInfo => (...argsArray) => this.props.handleAction(eventInfo, {payload: JSON.stringify(argsArray)}));\n//         }\n//\n//         getMarginLeftStyle() {\n//             const {width, alignment} = _.get(this.props, 'defaultContentArea', {width: 980, alignment: 0.5});\n//             return {\n//                 marginLeft: `calc((100% - ${width}px) * ${alignment})`\n//             }\n//         }\n//\n//         render() {\n//             const eventHandlers = this.getEventHandlers();\n//             console.log({eventHandlers});\n//             const wixCodeProps = _.get(this.props, 'compData.wixCodeProps');\n//             const {style, id, resizeComponent, formFactor, viewMode} = this.props;\n//             const dimensions = _.pick(this.props.dimensions, ['width', 'height', 'left', 'top']);\n//             const props = {\n//                 ...wixCodeProps,\n//                 ...eventHandlers,\n//                 id,\n//                 style,\n//                 resizeComponent,\n//                 formFactor,\n//                 viewMode,\n//                 dimensions\n//             };\n//\n//             const wrapperStyle = _.defaults(this.getMarginLeftStyle(), this.props.dimensions);\n//             return <div style={wrapperStyle}>\n//                 <WrappedComponent {...props}/>\n//             </div>\n//         }\n//     };\n// };\n\n\n\n"]}