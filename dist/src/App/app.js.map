{"version":3,"sources":["app.js"],"names":["toCssString","styleId","backgroundColor","color","width","height","App","city","props","onCityChanged","weather","handleClick","styleData","layout","styleParams","_","get","React","Component","component"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AACA;AACA;;AAEA,IAAMA,cAAc,SAAdA,WAAc,OAAsD;AAAA,QAApDC,OAAoD,QAApDA,OAAoD;AAAA,QAA3CC,eAA2C,QAA3CA,eAA2C;AAAA,QAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,QAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,QAAZC,MAAY,QAAZA,MAAY;;AACtE,iDACsBH,eADtB,+BAEiBC,KAFjB;AAQH,CATD;;IAYMG,G;;;;;;;;;;;oCAEUC,I,EAAM;AACd,iBAAKC,KAAL,CAAWC,aAAX,CAAyBF,IAAzB;AACH;;;iCAGQ;AAAA;;AAAA,yBACmB,KAAKC,KADxB;AAAA,gBACEE,OADF,UACEA,OADF;AAAA,gBACWH,IADX,UACWA,IADX;;;AAGL,mBACI;AAAA;AAAA,kBAAK,WAAU,MAAf;AAEI;AAAA;AAAA;AAAA;AAAYA,wBAAZ;AAAA;AAAA,iBAFJ;AAGI;AAAA;AAAA;AAAA;AAAeG,2BAAf;AAAA;AAAA,iBAHJ;AAKI,yDALJ;AAOI;AAAA;AAAA;AACI;AAAA;AAAA,0BAAG,MAAK,GAAR,EAAY,OAAO,EAACP,OAAO,OAAR,EAAnB,EAAqC,SAAS;AAAA,uCAAM,OAAKQ,WAAL,CAAiB,UAAjB,CAAN;AAAA,6BAA9C;AAAA;AAAA;AADJ,iBAPJ;AAUI;AAAA;AAAA;AACI;AAAA;AAAA,0BAAG,MAAK,GAAR,EAAY,OAAO,EAACR,OAAO,OAAR,EAAnB,EAAqC,SAAS;AAAA,uCAAM,OAAKQ,WAAL,CAAiB,QAAjB,CAAN;AAAA,6BAA9C;AAAA;AAAA;AADJ,iBAVJ;AAaI;AAAA;AAAA;AACI;AAAA;AAAA,0BAAG,MAAK,GAAR,EAAY,OAAO,EAACR,OAAO,OAAR,EAAnB,EAAqC,SAAS;AAAA,uCAAM,OAAKQ,WAAL,CAAiB,OAAjB,CAAN;AAAA,6BAA9C;AAAA;AAAA;AADJ,iBAbJ;AAgBI;AAhBJ,aADJ;AAuBH;;;mCACwC;AAAA,gBAA7BV,OAA6B,SAA7BA,OAA6B;AAAA,gBAApBW,SAAoB,SAApBA,SAAoB;AAAA,gBAATC,MAAS,SAATA,MAAS;AAAA,gBAC9BT,KAD8B,GACbS,MADa,CAC9BT,KAD8B;AAAA,gBACvBC,MADuB,GACbQ,MADa,CACvBR,MADuB;;AAErC,gBAAMS,cAAcF,UAAUE,WAA9B;AACA,gBAAMZ,kBAAkBa,EAAEC,GAAF,CAAMF,WAAN,EAAmB,+BAAnB,CAAxB;AACA,gBAAMX,QAAQY,EAAEC,GAAF,CAAMF,WAAN,EAAmB,0BAAnB,CAAd;AACA,mBAAOd,YAAY,EAACC,gBAAD,EAAUC,gCAAV,EAA2BC,YAA3B,EAAkCC,YAAlC,EAAyCC,cAAzC,EAAZ,CAAP;AACH;;;;EAxCaY,gBAAMC,S;;kBA6CT;AACXC,eAAWb;AADA,C","file":"app.js","sourcesContent":["import React from 'react';\n// import 'regenerator-runtime/runtime';\n// import santaTypesDefinitions from 'santa-components/src/definitions/santaTypesDefinitions';\n\nconst toCssString = ({styleId, backgroundColor, color, width, height}) => {\n    return `.root {\n            background: ${backgroundColor}; \n            color: ${color};\n            font-size: 20px;\n            width: 100%; \n            height: 100%;\n            padding: 10px;\n        } `;\n};\n\n\nclass App extends React.Component {\n\n    handleClick(city) {\n        this.props.onCityChanged(city);\n    }\n\n\n    render() {\n        const {weather, city} = this.props;\n\n        return (\n            <div className='root'>\n\n                <div>City: {city} </div>\n                <div>Weather: {weather} </div>\n\n                <br/>\n\n                <div>\n                    <a href=\"#\" style={{color: 'white'}} onClick={() => this.handleClick('Tel Aviv')}>Tel Aviv</a>\n                </div>\n                <div>\n                    <a href=\"#\" style={{color: 'white'}} onClick={() => this.handleClick('London')}>London</a>\n                </div>\n                <div>\n                    <a href=\"#\" style={{color: 'white'}} onClick={() => this.handleClick('Paris')}>Paris</a>\n                </div>\n                <style>\n\n                </style>\n            </div>\n\n        );\n    }\n    static css({styleId, styleData, layout}) {\n        const {width, height} = layout;\n        const styleParams = styleData.styleParams;\n        const backgroundColor = _.get(styleParams, 'colors._backgroundColor.value');\n        const color = _.get(styleParams, 'colors._titleColor.value');\n        return toCssString({styleId, backgroundColor, color, width, height});\n    }\n}\n\n\n\nexport default {\n    component: App\n}\n\n\n"]}